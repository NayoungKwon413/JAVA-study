package chap4;
/*
 * shift 연산자 : 비트 이동 연산자
 * 
 * << n : n비트 만큼 왼쪽으로 이동 + 오른쪽 남은 빈칸은 0으로 채움
 * >> n : n비트 만큼 오른쪽으로 이동 + 왼쪽 남은 빈칸은 부호비트로 채움
 * >>> n : n비트 만큼 오른쪽으로 이동 + 왼쪽 남은 비트는 0으로 채움(부호 바뀔 수 있음)
 */
public class OpEx8 {

	public static void main(String[] args) {
		System.out.println("8 << 2 :" + (8 << 2));  //32
		/*
		 * 8   : 00001000
		 * ----------------
		 * <<2 : 00100000  : 왼쪽으로 두칸 밀어냄
		 */
		System.out.println("8 >> 2 :" + (8 >> 2));  //2
		/*
		 * 8   : 00001000
		 * ----------------
		 * >>2 : 00000010  : 오른쪽으로 두칸 밀어냄
		 */
		System.out.println("8 >>> 2 :" + (8 >>> 2));  //2
		/*
		 * 8    : 00001000
		 * ----------------
		 * >>>2 : 00000010  : 오른쪽으로 두칸 밀어냄
		 */
		System.out.println("-8 << 2 :" + (-8 << 2));  //-32
		/*
		 * -8   : 11111000
		 * ----------------
		 * <<2  : 11100000  : 왼쪽으로 두칸 밀어냄
		 */
		System.out.println("-8 >> 2 :" + (-8 >> 2));  //-2
		/*
		 * -8   : 11111000
		 * ----------------
		 * >>2  : 11111110  : 오른쪽으로 두칸 밀어냄+빈칸은 1로 채움
		 */
		System.out.println("-8 >>> 2 :" + (-8 >>> 2));  //1073741822
		/*
		 * -8    : 11111000
		 * ----------------
		 * >>>2  : 00111110  : 오른쪽으로 두칸 밀어냄+빈칸은 0으로 채움
		 */

	}

}
